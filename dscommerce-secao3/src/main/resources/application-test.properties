# ========================================
# CONFIGURAÇÃO DE CONEXÃO COM O BANCO H2
# ========================================
# Acesse: http://localhost:8080/h2-console

# URL de conexão com o banco H2 em memória |jdbc:h2:mem:testdb = banco em memória RAM (dados são perdidos ao parar a aplicação) |"testdb" é o nome do banco de dados:
spring.datasource.url=jdbc:h2:mem:testdb
# Driver JDBC do H2 Database:
spring.datasource.driver-class-name=org.h2.Driver
# Nome de usuário para autenticação no banco |"sa" é o usuário padrão do H2 (System Administrator):
spring.datasource.username=sa
# Senha para autenticação no banco |Vazia por padrão no H2 (sem senha):
spring.datasource.password=
# Habilita o console web do H2 para gerenciar o banco via navegador |Permite visualizar tabelas, executar queries SQL, etc.:
spring.h2.console.enabled=true
# Define o caminho/URL para acessar o console H2 |Padrão seria /h2-console, aqui está explícito:
spring.h2.console.path=/h2-console
# Estratégia de criação/atualização do schema do banco |create-drop = cria as tabelas ao iniciar e remove ao parar a aplicação |Ideal para desenvolvimento/testes pois sempre começa com banco limpo:
spring.jpa.hibernate.ddl-auto=create-drop
# Exibe no console/log todas as queries SQL executadas pelo Hibernate |Útil para debug e aprendizado - ver o SQL gerado pelas operações JPA:
spring.jpa.show-sql=true
# Formata as queries SQL para melhor legibilidade no log |Quebra linhas e indenta o SQL para facilitar a leitura:
spring.jpa.properties.hibernate.format_sql=true
# Especifica o dialeto SQL para o H2 |Informa ao Hibernate quais comandos SQL específicos do H2 usar |Otimiza as queries para as particularidades do H2:
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


